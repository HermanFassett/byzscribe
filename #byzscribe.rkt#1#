#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 29 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 55 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1
          0 487 0 26 3 12 #"#lang racket"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 67
#"; Byzscribe: A program for rendering plaintext byzantine chant code"
0 0 22 29 1 #"\n"
0 0 17 3 34 #"; Copyright (C) 2012 Erik Ferguson"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 63
#"; This library is free software; you can redistribute it and/or"
0 0 22 29 1 #"\n"
0 0 17 3 60
#"; modify it under the terms of the GNU Lesser General Public"
0 0 22 29 1 #"\n"
0 0 17 3 62
#"; License as published by the Free Software Foundation; either"
0 0 22 29 1 #"\n"
0 0 17 3 68
#"; version 2.1 of the License, or (at your option) any later version."
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 65
#"; This library is distributed in the hope that it will be useful,"
0 0 22 29 1 #"\n"
0 0 17 3 64
#"; but WITHOUT ANY WARRANTY; without even the implied warranty of"
0 0 22 29 1 #"\n"
0 0 17 3 67
#"; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU"
0 0 22 29 1 #"\n"
0 0 17 3 49 #"; Lesser General Public License for more details."
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 66
#"; You should have received a copy of the GNU Lesser General Public"
0 0 22 29 1 #"\n"
0 0 17 3 69
(
 #"; License along with this library; if not, write to the Free Softwar"
 #"e"
) 0 0 22 29 1 #"\n"
0 0 17 3 80
(
 #"; Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  021"
 #"10-1301  USA"
) 0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 39 #"; -------------------------------------"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 22 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 22 3 1 #" "
0 0 19 3 12 #"\"neumes.rkt\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 10 #"NEUME-SIZE"
0 0 22 3 1 #" "
0 0 20 3 2 #"28"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 9 #"TEXT-SIZE"
0 0 22 3 1 #" "
0 0 20 3 2 #"18"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 9 #"TEXT-FONT"
0 0 22 3 1 #" "
0 0 19 3 10 #"\"EZ Omega\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 98
(
 #"; FILLER is used in a number of places to prepend a blank image to f"
 #"unctions that return an image."
) 0 0 22 29 1 #"\n"
0 0 17 3 112
(
 #"; This is necessary because functions such as \"beside\" are used, a"
 #"nd they expect to receive at least 2 arguments"
) 0 0 22 29 1 #"\n"
0 0 17 3 103
(
 #"; FILLER guarantees that there are at least two arguments. There's p"
 #"robably a better way to do this. :)"
) 0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 6 #"FILLER"
0 0 22 3 2 #" ("
0 0 14 3 6 #"square"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 22 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 33 #"; STRUCTS -----------------------"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 8 #"; phrase"
0 0 22 29 1 #"\n"
0 0 17 3 43 #"; defines a syllable and accompanying notes"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"struct"
0 0 22 3 1 #" "
0 0 14 3 6 #"phrase"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 4 #"text"
0 0 22 3 19 #"                   "
0 0 17 3 34 #"; string: the word to be displayed"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"   "
0 0 14 3 5 #"notes"
0 0 22 3 18 #")                 "
0 0 17 3 54 #"; a list (neumes) of lists of notes (symbol-groupings)"
0 0 22 29 1 #"\n"
0 0 22 3 16 #"  #:transparent)"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 34 #"; MACROS -------------------------"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 18 #"define-syntax-rule"
0 0 22 3 2 #" ("
0 0 14 3 5 #"chant"
0 0 22 3 2 #" ["
0 0 14 3 4 #"word"
0 0 22 3 2 #" ("
0 0 14 3 5 #"notes"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 3 #")] "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 22 3 2 #" ["
0 0 14 3 6 #"phrase"
0 0 22 3 1 #" "
0 0 14 3 4 #"word"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 14 3 5 #"notes"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 3 #")] "
0 0 14 3 3 #"..."
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 44 #"; FUNCTION DEFINITIONS ---------------------"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 35 #"; render : list of phrases -> image"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 6 #"render"
0 0 22 3 1 #" "
0 0 14 3 10 #"chant-list"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 6 #"beside"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 6 #"FILLER"
0 0 22 3 2 #" ("
0 0 14 3 3 #"map"
0 0 22 3 1 #" "
0 0 14 3 13 #"render-phrase"
0 0 22 3 1 #" "
0 0 14 3 10 #"chant-list"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 33 #"; render-phrase : phrase -> image"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 13 #"render-phrase"
0 0 22 3 1 #" "
0 0 14 3 8 #"a-phrase"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 11 #"above/align"
0 0 22 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 22 29 1 #"\n"
0 0 22 3 16 #"               ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 6 #"beside"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 6 #"FILLER"
0 0 22 3 2 #" ("
0 0 14 3 3 #"map"
0 0 22 3 1 #" "
0 0 14 3 12 #"render-neume"
0 0 22 3 2 #" ("
0 0 14 3 12 #"phrase-notes"
0 0 22 3 1 #" "
0 0 14 3 8 #"a-phrase"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 16 #"               ("
0 0 14 3 9 #"text/font"
0 0 22 3 2 #" ("
0 0 14 3 11 #"phrase-text"
0 0 22 3 1 #" "
0 0 14 3 8 #"a-phrase"
0 0 22 3 2 #") "
0 0 14 3 9 #"TEXT-SIZE"
0 0 22 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 22 3 1 #" "
0 0 14 3 9 #"TEXT-FONT"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"modern"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"normal"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"normal"
0 0 22 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 29 1 #"\n"
0 0 17 3 31 #"; render-neume : neume -> image"
0 0 22 29 1 #"\n"
0 0 17 3 24 #"; renders a single neume"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 12 #"render-neume"
0 0 22 3 1 #" "
0 0 14 3 7 #"a-neume"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 9 #"text/font"
0 0 22 3 2 #" ("
0 0 14 3 20 #"neume-character-code"
0 0 22 3 1 #" "
0 0 14 3 7 #"a-neume"
0 0 22 3 2 #") "
0 0 14 3 10 #"NEUME-SIZE"
0 0 22 3 2 #" ("
0 0 14 3 11 #"neume-color"
0 0 22 3 1 #" "
0 0 14 3 7 #"a-neume"
0 0 22 3 3 #") ("
0 0 14 3 10 #"neume-font"
0 0 22 3 1 #" "
0 0 14 3 7 #"a-neume"
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 6 #"modern"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"normal"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"normal"
0 0 22 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 43 #"; print-all-neumes : hash -> list-of-images"
0 0 22 29 1 #"\n"
0 0 17 3 61
#"; call using default hash with (print-all-neumes neume-names)"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 16 #"print-all-neumes"
0 0 22 3 1 #" "
0 0 14 3 10 #"neume-hash"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 11 #"above/align"
0 0 22 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 22 3 2 #" ("
0 0 14 3 15 #"list-all-neumes"
0 0 22 3 1 #" "
0 0 14 3 10 #"neume-hash"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 41 #"; list-all-neumes: hash -> list-of-images"
0 0 22 29 1 #"\n"
0 0 17 3 74
(
 #"; given a names hash generate a list of images of every neume and it"
 #"s name"
) 0 0 22 29 1 #"\n"
0 0 17 3 93
(
 #"; will insert an ison for neumes that modify a preceeding neume (oth"
 #"erwise it will not print)"
) 0 0 22 29 1 #"\n"
0 0 17 3 110
(
 #"; Because it is a hash, it is unordered output. In the future, it'd "
 #"be nice to have a better function for this"
) 0 0 22 29 1 #"\n"
0 0 17 3 82
(
 #"; that has a more ordered output for documentation, but this will su"
 #"ffice for now."
) 0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 15 #"list-all-neumes"
0 0 22 3 1 #" "
0 0 14 3 10 #"neume-hash"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 8 #"for/list"
0 0 22 3 4 #" ([("
0 0 14 3 3 #"key"
0 0 22 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 3 2 #") "
0 0 14 3 10 #"neume-hash"
0 0 22 3 2 #"])"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 22 3 2 #" ("
0 0 14 3 15 #"neume-modifier?"
0 0 22 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 6 #"render"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 2 #" ("
0 0 14 3 6 #"phrase"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 2 #" ("
0 0 14 3 13 #"neume-aliases"
0 0 22 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 14 3 4 #"ison"
0 0 22 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 6 #"render"
0 0 22 3 2 #" ("
0 0 14 3 4 #"list"
0 0 22 3 2 #" ("
0 0 14 3 6 #"phrase"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 2 #" ("
0 0 14 3 13 #"neume-aliases"
0 0 22 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 3 4 #")) ("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 3 7 #")))))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 37 #"; chant-page : list-of-chant -> image"
0 0 22 29 1 #"\n"
0 0 17 3 44 #"; Used for rendering multiple lines of chant"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 10 #"chant-page"
0 0 22 3 1 #" "
0 0 14 3 13 #"list-of-chant"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 5 #"apply"
0 0 22 3 1 #" "
0 0 14 3 11 #"above/align"
0 0 22 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 6 #"FILLER"
0 0 22 3 2 #" ("
0 0 14 3 3 #"map"
0 0 22 3 1 #" "
0 0 14 3 6 #"render"
0 0 22 3 1 #" "
0 0 14 3 13 #"list-of-chant"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 54 #"; --- HOW TO USE -------------------------------------"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 10 #"test-chant"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 5 #"chant"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"   ["
0 0 19 3 7 #"\"Lord,\""
0 0 22 3 2 #" ("
0 0 14 3 19 #"oligon+kentema-side"
0 0 22 3 1 #" "
0 0 14 3 11 #"klasma-left"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"   ["
0 0 19 3 8 #"\"have__\""
0 0 22 3 2 #" ("
0 0 14 3 4 #"ison"
0 0 22 3 1 #" "
0 0 14 3 14 #"ypporoe-gorgon"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"   ["
0 0 19 3 21 #"\"mer - - - - - - - -\""
0 0 22 3 2 #" ("
0 0 14 3 6 #"oligon"
0 0 22 3 1 #" "
0 0 14 3 22 #"oligon+kentemata-below"
0 0 22 3 1 #" "
0 0 14 3 6 #"gorgon"
0 0 22 3 1 #" "
0 0 14 3 8 #"elaphron"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"   ["
0 0 19 3 4 #"\"cy\""
0 0 22 3 2 #" ("
0 0 14 3 11 #"apostrophos"
0 0 22 3 1 #" "
0 0 14 3 12 #"klasma-right"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"   ["
0 0 19 3 2 #"\"\""
0 0 22 3 2 #" ("
0 0 14 3 12 #"martyria-vou"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  )"
0 0 22 29 1 #"\n"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 48 #"; Run the following to render one line of chant:"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 6 #"render"
0 0 22 3 1 #" "
0 0 14 3 10 #"test-chant"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 67
#"; Run the following to render multiple lines of chant as one image:"
0 0 22 29 1 #"\n"
0 0 17 3 54 #"; (chant-page (list test-chant test-chant test-chant))"
0           0
